array(1:8, c(2,4))
array(1:8, dim = c(2,4))
array(1:8, dim = c(2,4), dimnames = c('a','b','c','d'))
array(1:8, dim = c(2,4), dimnames = list('a','b','c','d'))
list(1,2,3,4)
array(1:8, dim = c(2,4), dimnames = list('a','b'))
array(1:8, dim = c(2,4), dimnames = list('a'))
array(1:8, dim = c(2,4), dimnames = list(c('a','b'), c('a','b','c','d')))
?array
a <- [1,2,3]
a <- list(1,2,3)
class(a)
movie_array
movie_array[,3]
movie_array[1:3,1:3]
movie_array[3,]
movie_array[3,3]
dim(movie_array)
dim(movie_array)
arrayTest <- array(1:4, dim=c(3,4))
arrayTest
arrayTest[arrayTest > 1]
length(arrayTest[arrayTest > 1])
list(arrayTest[arrayTest > 1])
listTest <- list(arrayTest[arrayTest > 1])
listTest
listTest + 2
listTest.append(5)
listTest.add(1)
?list
is.list(listTest)
maskArray <- arrayTest > 1
maskArray
class(maskArray)
your.mat.data <- c(1, 24, 1, 1, 1, 24, 1, 1, 1, 1, 1, 1, 1, 45,
104, 1, 1, 45, 1, 92, 1, 1, 104, 92, 1)
your <- c(1, 24, 1, 1, 1, 24, 1, 1, 1, 1, 1, 1, 1, 45,
104, 1, 1, 45, 1, 92, 1, 1, 104, 92, 1)
your
yourMatrix <- array(your, dim = c(5,5))
yourMatrix
yourMatrix[yourMatrix == 1] <- 0
yourMatrix
yourMatrix <- array(your, dim = c(5,5))
yourMatrix
replace(yourMatrix, yourMatrix == 1, 0)
movie_vector <- c('a','b','c','d','e','f','g','h','i')
movie_vector
movie_matrix <- matrix(movie_vector,3,3)
movie_matrix
upcoming <- c('j','k','l')
install.packages('swirl')
library(swirl)
rm(list =ls())
swirl()
swirl()
library(swirl)
swirl()
main()
swirl()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res <- gather(students, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(data = res, col = sex_class, into = c("sex","class"))
submit()
students
students3
submit()
?spread
submit()
submit()
submit()
library(readr)
parse_number("class5")
?mutate
parse_number("class5")
submit()
submit()
submit()
submit()
submit()
students4
submit()
submit()
submit()
?unique
submit()
submit()
submit()
submit()
submit()
submit()
passed
failed
mutate(passed, status = "passed")
passed <- passed %>% mutate(status = "passed")
passed
failed <- failed %>% mutate(status = "failed")
failed
?bind_rows
bind_rows(passed, failed)
sat
submit()
submit()
Sys.getlocale()
Sys.getlocale("LC_TIME")
sessionInfo()
library(lubridate)
Sys.setlocale("LC_TIME", "English")
Sys.time()
help(package = "lubridate")
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
now()
this_moment = now()
this_moment <- now()
this_moment
minute(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, now())
this_moment <- update(this_moment, hours = 10, minutes = 24)
this_moment
nyc = now(zone = "America/New_York")
nyc <- now(zone = "America/New_York")
nyc <- now("America/New_York")
nyc
nyc + days(2)
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arriVe <- with_tz(arrive, zone = "Asia/Hong_Kong")
arriVe <- with_tz(arrive, "Asia/Hong_Kong")
arriVe <- with_tz(arrive,tzone = "Asia/Hong_Kong")
arriVe <- with_tz(arrive, "Asia/Hong_Kong")
with_tz(arrive, "Asia/Hong_Kong")
arriVe <- with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
match_call('arrive <- with_tz(arrive, "Asia/Hong_Kong")')
match.call('arrive <- with_tz(arrive, "Asia/Hong_Kong")')
?interval
interval(last_time, arrive)
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
mydf
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/msleep_ggplot2.csv"
filename <- "msleep_ggplot2.csv"
if(!file.exists(filename)) download(url,filename)
msleep <- read.csv("msleep_ggplot2.csv")
head(msleep)
summary(msleep)
colnames(msleep)
mydf <- tbl_df(msleep)
mydf
library(dplyr)
mydf <- tbl_df(msleep)
mydf
mydf %>% select(name, order, desc(sleep_total)) %>% arrange(order, sleep_total)
mydf %>% arrange(order) %>% head
mydf %>% arrange(desc(order)) %>% head
mydf %>% select(name,order,sleep_total) %>% arrange(order, sleep_total)
mydf %>% select(name, order, sleep_total) %>% arrange(order, sleep_total) %>% filter(sleep_total >= 16)
mydf %>% select(name, order, desc(sleep_total)) %>% arrange(order, sleep_total)
mydf %>% select(name, order, sleep_total) %>% arrange(order, desc(sleep_total)) %>% filter(sleep_total >= 16)
mydf %>% mutate(rem_proportion = sleep_rem / sleep_total) %>% print
mydf %>% mutate(rem_proportion = sleep_rem / sleep_total, bodywt_grams = bodywt * 1000) %>% print
mydf %>% summarise(avg_sleep = mean(sleep_total))
mydf %>% summarise(avg_sleep = mean(sleep_total),
min_sleep = min(sleep_total),
max_sleep = max(sleep_total),
total = n())
group_by(order)
group_by(mydf,order)
mydf %>% select(order) %>% group_by(order)
mydf %>% select(order)
mydf %>% group_by(order) %>% summarise(avg_sleep = mean(sleep_total),
min_sleep = min(sleep_total),
max_sleep = max(sleep_total),
total = n())
mydf
filer(mydf, order %in% c("Carnivora"))
filer(mydf, order %in% c("Carnivora"))
filter(mydf, order %in% c("Carnivora"))
install.packages('nycflights13')
library(nycflights13)
dim(flights)
mydf <- tbl_df(flights)
rm("flights")
mydf
head(mydf)
mydf %>% filter(month == 1, day == 1)
mydf %>% select(month, day) %>% filter(month == 1, day == 1)
mydf %>% select(month, day) %>% filter(month == 1, day == 1) %>% nrow()
slice(mydf, 1:10)
slice(mydf, 1:5)
mydf
select(mydf, -(month))
select(mydf, -(month: dep_delay))
select(mydf, -(month))
select(mydf, -(c(month, day)))
mydf %>% select(year,month,day) %>% slice(1:5) %>% arrange(year)
mydf %>% select(year,month,day) %>% slice(1:5) %>% arrange(desc(year))
mydf %>% select(year,month,day) %>% arrange(desc(year))
select(mydf,year)
max(year)
min(year)
max(mydf,year)
mydf %>% select(year) %>% group_by(year) %>% max(year)
mydf %>% select(year) %>% group_by(year)
max(mydf$year)
min(mydf$year)
mydf %>% select(year, flight)
mydf
rename(mydf, month = month_to)
rename(mydf, month = "month_to")
rename(mydf, month = month)
rename(mydf, month = month_a)
rename(mydf, month_a = month)
mydf
mydf %>% distinct(tailnum)
mydf %>% transmute(gain = arr_delay - dep_delay)
mydf
colnames(mydf)
summarise(mydf, delay = mean(dep_delay, na.rm = T))
mydf %>% sample_n(3)
mydf %>% sample_n(3)
mydf %>% sample_n(5) %>% select(month)
?sample_frac
sample_frac(mydf, 0.01)
by_tailnum <- group_by(mydf, tailnum)
by_tailnum
delay <- by_tailnum %>% summarise(count = n(),
dist = mean(distance, na.rm = T),
delay = mean(arr_delay, na.rm = T))
delay
delay %>% filter(count > 20, dist < 2000)
library(ggplot2)
install.packages('ggplot2')
library(ggplot2)
ggplot(delay, aes(dist, delay)) +
geom_point(aes(size = count), alpha = 1/2)+
geom_smooth() +
scale_size_area()
destinations <- group_by(mydf, dest)
destinations
summarise(destinations, planes = n_distinct(tailnum),mydf = n()
summarise(destinations, planes = n_distinct(tailnum),mydf = n())
summarise(destinations,
planes = n_distinct(tailnum),
mydf = n())
daily <- group_by(mydf, year, month, day)
daily
per_day <- summarise(daily, mydf = n())
per_day
View(per_day)
per_month <- mydf %>% summarise(per_day, flights = sum(mydf))
per_month <- mydf %>%
summarise(per_day, flights = sum(mydf))
per_month <- mydf %>%
summarise(per_day, mydf = sum(mydf))
per_month <- summarise(mydf, flights = sum(mydf))
per_month
per_month <- summarise(mydf, flights = sum(mydf))
per_month <- summarise(per_day, flights = sum(mydf))
per_month
per_year <- summarise(per_month, flights = sum(mydf))
per_year <- summarise(per_month, flights = sum(mydf))
(per_year  <- summarise(per_month, flights = sum(flights)))
per_year  <- summarise(per_month, flights = sum(flights))
(
(per_year  <- summarise(per_month, flights = sum(flights)))
(per_year  <- summarise(per_month, flights = sum(flights)))
per_year
per_year
(per_year  <- summarise(per_month, flights = sum(flights)))
(per_year  <- summarise(per_month, flights = sum(flights)))
(per_year  <- summarise(per_month, flights = sum(flights)))
suppressMessages(library(dplyr))
install.packages('hflights')
suppressMessages(library(dplyr))
suppressMessages(library(hflights))
data(hflights)
data(hflights)
head(hflights)
mydf <- tbl_df(hflights)
rm(hflights)
mydf
print(mydf, n=20)
sample_n(mydf,30)
filter(mydf, Month == 1, DayofMonth == 1)
mydf %>% filter(UniqueCarrier == "AA" | UniqueCarrier == "UA")
mydf %>% filter(UniqueCarrier == "AA" | UniqueCarrier == "UA") %>% select(UniqueCarrier)
mydf %>% filter(UniqueCarrier %in% c("AA","UA"))
mydf %>% select(DepTime, ArrTime, FlightNum)
mydf %>% select(mydf, Year:DayofMonth, contains(c("Taxi","Delay")))
mydf %>% select(mydf, Year:DayofMonth, contains("Taxi"), contains("Delay"))
mydf %>% select(mydf, Year:DayofMonth, contains("Taxi"), contains("Delay"))
mydf %>% select(Year:DayofMonth, contains("Taxi"), contains("Delay"))
mydf %>% select(Year:DayofMonth, starts_with("Tax"))
mydf
mydf %>% select(Year:DayofMonth, ends_with("me"))
mydf %>% select(Year:DayofMonth, %in% c("Year","Month"))
mydf %>% select(Year:DayofMonth, contains("Year" | "Month"))
mydf %>% select(Year:DayofMonth, contains("Year"), contains("Month"))
mydf %>% select(UniqueCarrier, DepDelay) %>% filter(DepDelay > 60)
mydf %>% select(UniqueCarrier, DepDelay) %>% arrange(DepDelay)
mydf %>% select(UniqueCarrier, DepDelay) %>% arrange(Desc(DepDelay))
mydf %>%
select(UniqueCarrier, DepDelay) %>%
arrange(desc(DepDelay))
mydf %>% select(Distance, AirTime) %>% mutate(Speed = Distance/AirTime*60)
mydf %>% group_by(Dest) %>% summarise(avg_delay = mean(ArrDelay, na.rm = T))
mydf.Dest
mydf$Dest
count(mydf$Dest)
sum(mydf,Dest)
sum(mydf$Dest)
mydf %>% group_by(UniqueCarrier) %>% summarise_each(funs(mean), Cancelled, Diverted)
mydf %>% group_by(UniqueCarrier) %>% summarise_each(funs(min(na.rm = T), max(na.rm = T)), matches("Delay"))
mydf %>%
group_by(UniqueCarrier) %>%
summarise_each(funs(min(., na.rm = T), max(.,na.rm = T)), matches("Delay"))
mydf %>%
group_by(UniqueCarrier) %>%
summarise_each(funs(min(..., na.rm = T), max(...,na.rm = T)), matches("Delay"))
mydf %>%
group_by(UniqueCarrier) %>%
summarise_each(funs(min(., na.rm = T), max(.,na.rm = T)), matches("Delay"))
n(mydf$UniqueCarrier)
?n()
mydf %>% n()
mydf %>% n(.)
mydf %>% n(Month)
mydf %>%
group_by(Month, DayofMonth) %>%
summarise(flight_count = n()) %>%
arrange(desc(flight_count))
mydf %>%
group_by(Month, DayofMonth) %>%
tally(sort = T)
?tally()
mydf %>%
group_by(Dest) %>%
summarise(flight_count = n(), plane_count = n_distinct(TailNum))
mydf %>%
group_by(Dest) %>%
tally(sort = T)
mydf %>%
group_by(Dest) %>%
select(Cancelled) %>%
table() %>%
head()
mydf %>%
group_by(Dest) %>%
select(Cancelled) %>%
table() %>%
head()
select(mydf, UniqueCarrier)
mydf %>%
group_by(UniqueCarrier) %>%
select(Month, DayofMonth, DepDelay) %>%
filter(min_rank(desc(DepDelay)) <= 2) %>%
arrange(UniqueCarrier, desc(DepDelay))
mydf %>%
group_by(UniqueCarrier) %>%
select(Month, DayofMonth, DepDelay) %>%
filter(min_rank(desc(DepDelay)) <= 2) %>%
arrange(UniqueCarrier, desc(DepDelay))
mydf %>%
group_by(UniqueCarrier) %>%
select(Month, DayofMonth, DepDelay) %>%
top_n(2) %>%
arrange(UniqueCarrier, desc(DepDelay))
mydf %>%
group_by(Month) %>%
summarise(flight_count = n()) %>%
mutate(change = flight_count - lag(flight_count))
mydf %>%
group_by(Month) %>%
tally() %>%
mutate(change = n - lag(n))
?lag
?lag()
mydf %>% sample_n(5)
mydf %>% sample_n(5)
mydf %>% sample_n(5)
mydf %>% sample_frac(0.25, replace = T)
mydf %>% sample_frac(0.25, replace = T)
mydf %>% sample_frac(0.25, replace = T)
mydf %>% sample_frac(0.25, replace = T)
glimpse(mydf)
file <- system.file("tests", "OnlineRetail", package = "xlsx")
res <- read.xlsx(file, 1)
library(xlsx)
file <- system.file("tests", "OnlineRetail", package = "xlsx")
res <- read.xlsx(file, 1)
require(xlsx)
require(rJava)
my_data <- read.table(file = "OnlineRetail", header=TRUE)
my_data <- read.table(file = "OnlineRetail.xlsx", header=TRUE)
setwd("C:/Users/hammad.ali/Desktop/Hackathon")
my_data <- read.table(file = "OnlineRetail.xlsx", header=TRUE)
my_data <- read.table(file = "OnlineRetail.xlsx", header=TRUE)
setwd("C:/Users/hammad.ali/Desktop/Hackathon")
train<- read_csv("train.csv")
library(dplyr)
library(tidyr)
library(ggplot2)
library(reshape2)
library(readr)
library(lubridate)
library(rpart)
library(rattle)
library(car)
library(caret)
library(corrplot)
library(rpart.plot)
train<- read_csv("train.csv")
stores <- read_csv("stores.csv")
features <- read_csv("features.csv")
stores$Store <- factor(stores$Store)
train$Store <- factor(train$Store)
train <- full_join(train,stores,by=c("Store"))
train$WeekNum <- as.numeric(format(train$Date+3,"%U"))
temp <- as.numeric(format(train$Date,"%U"))
train$Returns <- lapply(train$Weekly_Sales,function(sales){
ifelse(sales < 0,sales,0)
})
train$Weekly_Sales <- lapply(train$Weekly_Sales,function(sales){
ifelse(sales > 0,sales,0)
})
final_data <- data.frame(Store=factor(),Date=as.Date(character()),Weekly_Sales=numeric(),IsHoliday=logical(),Type=factor(),WeekNum=factor())
aggregate_sales <- function(){
for(i in 1:45){
store_data <- train %>% filter(Store == i)
dates <- unique(train$Date)
for(next_date in seq_along(dates)){
current_date <- unique(train$Date)[[next_date]]
date_data <- store_data %>% filter(Date==current_date)
#Add all the weekly sales
net_sales <- sum(unlist(date_data$Weekly_Sales)) - sum(unlist(date_data$Returns))
#Construct the data frame and append it
next_row <- data.frame(Store=i,Date=current_date,Weekly_Sales=net_sales,IsHoliday=date_data$IsHoliday[[1]],Type=date_data$Type[[1]],WeekNum=date_data$WeekNum)
next_row$Store <- factor(next_row$Store)
final_data <- rbind(final_data,next_row)
}
}
return(final_data)
}
features$Store <- factor(features$Store)
train <- left_join(train,features,by=c("Store","Date","IsHoliday"))
train$MarkDown1 <- sapply(train$MarkDown1, function(value){
ifelse(is.na(value),0,value)
})
train$MarkDown2 <- sapply(train$MarkDown2, function(value){
ifelse(is.na(value),0,value)
})
train$MarkDown3 <- sapply(train$MarkDown3, function(value){
ifelse(is.na(value),0,value)
})
train$MarkDown4 <- sapply(train$MarkDown4, function(value){
ifelse(is.na(value),0,value)
})
train$MarkDown5 <- sapply(train$MarkDown5, function(value){
ifelse(is.na(value),0,value)
})
train$Rank <- cut(train$Weekly_Sales, 5, include.lowest = T, labels = c('A','B','C','D','E'))
typeof(train$Weekly_Sales)
train$Weekly_Sales <- unlist(train$Weekly_Sales)
train$Rank <- cut(train$Weekly_Sales, 5, include.lowest = T, labels = c('A','B','C','D','E'))
View(train)
dim(train)
write.csv(train, 'test_full_sheet.csv')
train$Returns <- unlist(train$Returns)
write.csv(train, 'test_full_sheet.csv')
